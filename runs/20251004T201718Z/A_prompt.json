```json
{
  "tooling": "terraform",
  "patterns": [
    {
      "path": "modules/s3_bucket/main.tf",
      "content": "# S3 Bucket Module\n# Provides secure S3 bucket with encryption, versioning, and lifecycle policies\n\nresource \"aws_s3_bucket\" \"this\" {\n  bucket        = var.bucket_name\n  force_destroy = var.force_destroy\n\n  tags = var.tags\n}\n\nresource \"aws_s3_bucket_versioning\" \"this\" {\n  count  = var.enable_versioning ? 1 : 0\n  bucket = aws_s3_bucket.this.id\n\n  versioning_configuration {\n    status = \"Enabled\"\n  }\n}\n\nresource \"aws_s3_bucket_server_side_encryption_configuration\" \"this\" {\n  count  = var.enable_encryption ? 1 : 0\n  bucket = aws_s3_bucket.this.id\n\n  rule {\n    apply_server_side_encryption_by_default {\n      sse_algorithm     = var.kms_key_id != null ? \"aws:kms\" : \"AES256\"\n      kms_master_key_id = var.kms_key_id\n    }\n    bucket_key_enabled = var.kms_key_id != null ? true : false\n  }\n}\n\nresource \"aws_s3_bucket_public_access_block\" \"this\" {\n  bucket = aws_s3_bucket.this.id\n\n  block_public_acls       = var.block_public_access\n  block_public_policy     = var.block_public_access\n  ignore_public_acls      = var.block_public_access\n  restrict_public_buckets = var.block_public_access\n}\n\nresource \"aws_s3_bucket_lifecycle_configuration\" \"this\" {\n  count  = length(var.lifecycle_rules) > 0 ? 1 : 0\n  bucket = aws_s3_bucket.this.id\n\n  dynamic \"rule\" {\n    for_each = var.lifecycle_rules\n    content {\n      id     = rule.value.id\n      status = rule.value.status\n\n      dynamic \"transition\" {\n        for_each = lookup(rule.value, \"transitions\", [])\n        content {\n          days          = transition.value.days\n          storage_class = transition.value.storage_class\n        }\n      }\n\n      dynamic \"expiration\" {\n        for_each = lookup(rule.value, \"expiration_days\", null) != null ? [1] : []\n        content {\n          days = rule.value.expiration_days\n        }\n      }\n    }\n  }\n}\n\nresource \"aws_s3_bucket_policy\" \"this\" {\n  count  = var.force_ssl ? 1 : 0\n  bucket = aws_s3_bucket.this.id\n\n  policy = jsonencode({\n    Version = \"2012-10-17\"\n    Statement = [\n      {\n        Sid    = \"DenyInsecureTransport\"\n        Effect = \"Deny\"\n        Principal = \"*\"\n        Action = \"s3:*\"\n        Resource = [\n          aws_s3_bucket.this.arn,\n          \"${aws_s3_bucket.this.arn}/*\"\n        ]\n        Condition = {\n          Bool = {\n            \"aws:SecureTransport\" = \"false\"\n          }\n        }\n      }\n    ]\n  })\n}\n\nresource \"aws_s3_bucket_logging\" \"this\" {\n  count  = var.logging_bucket != null ? 1 : 0\n  bucket = aws_s3_bucket.this.id\n\n  target_bucket = var.logging_bucket\n  target_prefix = var.logging_prefix\n}\n"
    },
    {
      "path": "modules/s3_bucket/variables.tf",
      "content": "variable \"bucket_name\" {\n  description = \"Name of the S3 bucket\"\n  type        = string\n}\n\nvariable \"force_destroy\" {\n  description = \"Allow bucket to be destroyed even if it contains objects\"\n  type        = bool\n  default     = false\n}\n\nvariable \"enable_versioning\" {\n  description = \"Enable versioning for the bucket\"\n  type        = bool\n  default     = true\n}\n\nvariable \"enable_encryption\" {\n  description = \"Enable server-side encryption\"\n  type        = bool\n  default     = true\n}\n\nvariable \"kms_key_id\" {\n  description = \"KMS key ID for encryption (null for AES256)\"\n  type        = string\n  default     = null\n}\n\nvariable \"block_public_access\" {\n  description = \"Block all public access to the bucket\"\n  type        = bool\n  default     = true\n}\n\nvariable \"force_ssl\" {\n  description = \"Enforce SSL/TLS for all requests\"\n  type        = bool\n  default     = true\n}\n\nvariable \"lifecycle_rules\" {\n  description = \"List of lifecycle rules for the bucket\"\n  type = list(object({\n    id              = string\n    status          = string\n    expiration_days = optional(number)\n    transitions = optional(list(object({\n      days          = number\n      storage_class = string\n    })))\n  }))\n  default = []\n}\n\nvariable \"logging_bucket\" {\n  description = \"Target bucket for access logs\"\n  type        = string\n  default     = null\n}\n\nvariable \"logging_prefix\" {\n  description = \"Prefix for access logs\"\n  type        = string\n  default     = \"logs/\"\n}\n\nvariable \"tags\" {\n  description = \"Tags to apply to the bucket\"\n  type        = map(string)\n  default     = {}\n}\n"
    },
    {
      "path": "modules/s3_bucket/outputs.tf",
      "content": "output \"bucket_id\" {\n  description = \"The name of the bucket\"\n  value       = aws_s3_bucket.this.id\n}\n\noutput \"bucket_arn\" {\n  description = \"The ARN of the bucket\"\n  value       = aws_s3_bucket.this.arn\n}\n\noutput \"bucket_domain_name\" {\n  description = \"The bucket domain name\"\n  value       = aws_s3_bucket.this.bucket_domain_name\n}\n\noutput \"bucket_regional_domain_name\" {\n  description = \"The bucket region-specific domain name\"\n  value       = aws_s3_bucket.this.bucket_regional_domain_name\n}\n"
    },
    {
      "path": "modules/s3_bucket/README.md",
      "content": "# S3 Bucket Module\n\n## Overview\nProvides a secure, production-ready S3 bucket with encryption, versioning, lifecycle policies, and public access blocking.\n\n## Features\n- **Encryption**: SSE-S3 (AES256) or SSE-KMS with customer-managed keys\n- **Versioning**: Optional versioning for object recovery\n- **Public Access Block**: Blocks all public access by default\n- **SSL Enforcement**: Optional bucket policy to deny non-HTTPS requests\n- **Lifecycle Management**: Configurable transitions to Intelligent-Tiering, Glacier, etc.\n- **Access Logging**: Optional logging to another S3 bucket\n\n## Usage\n\n```hcl\nmodule \"data_bucket\" {\n  source = \"./modules/s3_bucket\"\n\n  bucket_name         = \"my-app-data-bucket\"\n  enable_versioning   = true\n  enable_encryption   = true\n  kms_key_id          = aws_kms_key.app_key.id\n  force_ssl           = true\n  block_public_access = true\n\n  lifecycle_rules = [\n    {\n      id     = \"intelligent-tiering\"\n      status = \"Enabled\"\n      transitions = [\n        {\n          days          = 30\n          storage_class = \"INTELLIGENT_TIERING\"\n        },\n        {\n          days          = 90\n          storage_class = \"GLACIER\"\n        }\n      ]\n    }\n  ]\n\n  tags = {\n    Environment = \"production\"\n    Application = \"core-app\"\n    CostCenter  = \"engineering\"\n  }\n}\n```\n\n## Inputs\n\n| Name | Description | Type | Default | Required |\n|------|-------------|------|---------|----------|\n| bucket_name | Name of the S3 bucket | string | - | yes |\n| force_destroy | Allow bucket destruction with objects | bool | false | no |\n| enable_versioning | Enable versioning | bool | true | no |\n| enable_encryption | Enable server-side encryption | bool | true | no |\n| kms_key_id | KMS key ID for encryption | string | null | no |\n| block_public_access | Block all public access | bool | true | no |\n| force_ssl | Enforce SSL/TLS | bool | true | no |\n| lifecycle_rules | Lifecycle rules | list(object) | [] | no |\n| logging_bucket | Target bucket for logs | string | null | no |\n| logging_prefix | Prefix for logs | string | \"logs/\" | no |\n| tags | Resource tags | map(string) | {} | no |\n\n## Outputs\n\n| Name | Description |\n|------|-------------|\n| bucket_id | The name of the bucket |\n| bucket_arn | The ARN of the bucket |\n| bucket_domain_name | The bucket domain name |\n| bucket_regional_domain_name | The bucket region-specific domain name |\n\n## Security Considerations\n\n- Public access is blocked by default\n- SSL/TLS enforcement is enabled by default\n- Encryption at rest is enabled by default (AES256 or KMS)\n- Versioning is enabled by default for data protection\n- No hard-coded credentials or account-specific values\n\n## Compliance\n\n- Aligns with MEC security requirements\n- Supports audit logging via CloudTrail (S3 data events)\n- Encryption at rest and in transit enforced\n- Least-privilege access via IAM policies (not included in module)\n"
    },
    {
      "path": "modules/sqs_queue/main.tf",
      "content": "# SQS Queue Module\n# Provides standard or FIFO SQS queue with DLQ, encryption, and monitoring\n\nresource \"aws_sqs_queue\" \"this\" {\n  name                       = var.queue_name\n  fifo_queue                 = var.fifo_queue\n  content_based_deduplication = var.fifo_queue ? var.content_based_deduplication : null\n  deduplication_scope        = var.fifo_queue ? var.deduplication_scope : null\n  fifo_throughput_limit      = var.fifo_queue ? var.fifo_throughput_limit : null\n\n  visibility_timeout_seconds  = var.visibility_timeout_seconds\n  message_retention_seconds   = var.message_retention_seconds\n  max_message_size            = var.max_message_size\n  delay_seconds               = var.delay_seconds\n  receive_wait_time_seconds   = var.receive_wait_time_seconds\n\n  kms_master_key_id                 = var.kms_key_id\n  kms_data_key_reuse_period_seconds = var.kms_key_id != null ? var.kms_data_key_reuse_period_seconds : null\n\n  redrive_policy = var.enable_dlq ? jsonencode({\n    deadLetterTargetArn = aws_sqs_queue.dlq[0].arn\n    maxReceiveCount     = var.max_receive_count\n  }) : null\n\n  tags = var.tags\n}\n\nresource \"aws_sqs_queue\" \"dlq\" {\n  count = var.enable_dlq ? 1 : 0\n\n  name                       = \"${var.queue_name}-dlq\"\n  fifo_queue                 = var.fifo_queue\n  message_retention_seconds  = var.dlq_message_retention_seconds\n  kms_master_key_id          = var.kms_key_id\n  kms_data_key_reuse_period_seconds = var.kms_key_id != null ? var.kms_data_key_reuse_period_seconds : null\n\n  tags = merge(var.tags, {\n    Purpose = \"DeadLetterQueue\"\n  })\n}\n\nresource \"aws_sqs_queue_policy\" \"this\" {\n  count     = var.queue_policy != null ? 1 : 0\n  queue_url = aws_sqs_queue.this.id\n  policy    = var.queue_policy\n}\n\nresource \"aws_cloudwatch_metric_alarm\" \"dlq_messages\" {\n  count = var.enable_dlq && var.enable_dlq_alarm ? 1 : 0\n\n  alarm_name          = \"${var.queue_name}-dlq-messages\"\n  comparison_operator = \"GreaterThanThreshold\"\n  evaluation_periods  = var.dlq_alarm_evaluation_periods\n  metric_name         = \"ApproximateNumberOfMessagesVisible\"\n  namespace           = \"AWS/SQS\"\n  period              = var.dlq_alarm_period\n  statistic           = \"Average\"\n  threshold           = var.dlq_alarm_threshold\n  alarm_description   = \"Alert when messages appear in DLQ for ${var.queue_name}\"\n  treat_missing_data  = \"notBreaching\"\n\n  dimensions = {\n    QueueName = aws_sqs_queue.dlq[0].name\n  }\n\n  alarm_actions = var.alarm_actions\n\n  tags = var.tags\n}\n"
    },
    {
      "path": "modules/sqs_queue/variables.tf",
      "content": "variable \"queue_name\" {\n  description = \"Name of the SQS queue\"\n  type        = string\n}\n\nvariable \"fifo_queue\" {\n  description = \"Create a FIFO queue\"\n  type        = bool\n  default     = false\n}\n\nvariable \"content_based_deduplication\" {\n  description = \"Enable content-based deduplication for FIFO queues\"\n  type        = bool\n  default     = false\n}\n\nvariable \"deduplication_scope\" {\n  description = \"Deduplication scope for FIFO queues (queue or messageGroup)\"\n  type        = string\n  default     = \"queue\"\n}\n\nvariable \"fifo_throughput_limit\" {\n  description = \"Throughput limit for FIFO queues (perQueue or perMessageGroupId)\"\n  type        = string\n  default     = \"perQueue\"\n}\n\nvariable \"visibility_timeout_seconds\" {\n  description = \"Visibility timeout in seconds\"\n  type        = number\n  default     = 30\n}\n\nvariable \"message_retention_seconds\" {\n  description = \"Message retention period in seconds\"\n  type        = number\n  default     = 345600 # 4 days\n}\n\nvariable \"max_message_size\" {\n  description = \"Maximum message size in bytes\"\n  type        = number\n  default     = 262144 # 256 KB\n}\n\nvariable \"delay_seconds\" {\n  description = \"Delay before message becomes available\"\n  type        = number\n  default     = 0\n}\n\nvariable \"receive_wait_time_seconds\" {\n  description = \"Long polling wait time in seconds\"\n  type        = number\n  default     = 0\n}\n\nvariable \"kms_key_id\" {\n  description = \"KMS key ID for encryption (null for no encryption)\"\n  type        = string\n  default     = null\n}\n\nvariable \"kms_data_key_reuse_period_seconds\" {\n  description = \"KMS data key reuse period in seconds\"\n  type        = number\n  default     = 300\n}\n\nvariable \"enable_dlq\" {\n  description = \"Enable dead letter queue\"\n  type        = bool\n  default     = true\n}\n\nvariable \"max_receive_count\" {\n  description = \"Maximum receives before moving to DLQ\"\n  type        = number\n  default     = 3\n}\n\nvariable \"dlq_message_retention_seconds\" {\n  description = \"DLQ message retention period in seconds\"\n  type        = number\n  default     = 1209600 # 14 days\n}\n\nvariable \"queue_policy\" {\n  description = \"IAM policy document for the queue\"\n  type        = string\n  default     = null\n}\n\nvariable \"enable_dlq_alarm\" {\n  description = \"Enable CloudWatch alarm for DLQ messages\"\n  type        = bool\n  default     = true\n}\n\nvariable \"dlq_alarm_threshold\" {\n  description = \"Threshold for DLQ alarm\"\n  type        = number\n  default     = 1\n}\n\nvariable \"dlq_alarm_evaluation_periods\" {\n  description = \"Evaluation periods for DLQ alarm\"\n  type        = number\n  default     = 1\n}\n\nvariable \"dlq_alarm_period\" {\n  description = \"Period for DLQ alarm in seconds\"\n  type        = number\n  default     = 300\n}\n\nvariable \"alarm_actions\" {\n  description = \"List of ARNs to notify when alarm triggers\"\n  type        = list(string)\n  default     = []\n}\n\nvariable \"tags\" {\n  description = \"Tags to apply to resources\"\n  type        = map(string)\n  default     = {}\n}\n"
    },
    {
      "path": "modules/sqs_queue/outputs.tf",
      "content": "output \"queue_id\" {\n  description = \"The URL of the queue\"\n  value       = aws_sqs_queue.this.id\n}\n\noutput \"queue_arn\" {\n  description = \"The ARN of the queue\"\n  value       = aws_sqs_queue.this.arn\n}\n\noutput \"queue_name\" {\n  description = \"The name of the queue\"\n  value       = aws_sqs_queue.this.name\n}\n\noutput \"dlq_id\" {\n  description = \"The URL of the DLQ\"\n  value       = var.enable_dlq ? aws_sqs_queue.dlq[0].id : null\n}\n\noutput \"dlq_arn\" {\n  description = \"The ARN of the DLQ\"\n  value       = var.enable_dlq ? aws_sqs_queue.dlq[0].arn : null\n}\n\noutput \"dlq_name\" {\n  description = \"The name of the DLQ\"\n  value       = var.enable_dlq ? aws_sqs_queue.dlq[0].name : null\n}\n"
    },
    {
      "path": "modules/sqs_queue/README.md",
      "content": "# SQS Queue Module\n\n## Overview\nProvides a production-ready SQS queue (standard or FIFO) with dead letter queue, encryption, and CloudWatch monitoring.\n\n## Features\n- **Standard or FIFO**: Support for both queue types\n- **Dead Letter Queue**: Automatic DLQ creation with configurable retry count\n- **Encryption**: Optional SSE-KMS encryption at rest\n- **Long Polling**: Configurable receive wait time for cost optimization\n- **CloudWatch Alarms**: Optional alarm for DLQ message count\n- **Flexible Configuration**: Visibility timeout, retention, message size, etc.\n\n## Usage\n\n```hcl\nmodule \"batch_job_queue\" {\n  source = \"./modules/sqs_queue\"\n\n  queue_name                 = \"batch-job-queue\"\n  fifo_queue                 = false\n  visibility_timeout_seconds = 300\n  message_retention_seconds  = 345600\n  kms_key_id                 = aws_kms_key.app_key.id\n\n  enable_dlq        = true\n  max_receive_count = 3\n\n  enable_dlq_alarm  = true\n  dlq_alarm_threshold = 5\n  alarm_actions     = [aws_sns_topic.alerts.arn]\n\n  tags = {\n    Environment = \"production\"\n    Application = \"batch-processing\"\n    CostCenter  = \"engineering\"\n  }\n}\n```\n\n### FIFO Queue Example\n\n```hcl\nmodule \"order_queue\" {\n  source = \"./modules/sqs_queue\"\n\n  queue_name                    = \"order-processing.fifo\"\n  fifo_queue                    = true\n  content_based_deduplication   = true\n  deduplication_scope           = \"messageGroup\"\n  fifo_throughput_limit         = \"perMessageGroupId\"\n  kms_key_id                    = aws_kms_key.app_key.id\n\n  enable_dlq        = true\n  max_receive_count = 2\n\n  tags = {\n    Environment = \"production\"\n    Application = \"order-processing\"\n  }\n}\n```\n\n## Inputs\n\n| Name | Description | Type | Default | Required |\n|------|-------------|------|---------|----------|\n| queue_name | Name of the SQS queue | string | - | yes |\n| fifo_queue | Create a FIFO queue | bool | false | no |\n| content_based_deduplication | Enable content-based deduplication | bool | false | no |\n| deduplication_scope | Deduplication scope (queue/messageGroup) | string | \"queue\" | no |\n| fifo_throughput_limit | Throughput limit (perQueue/perMessageGroupId) | string | \"perQueue\" | no |\n| visibility_timeout_seconds | Visibility timeout | number | 30 | no |\n| message_retention_seconds | Message retention period | number | 345600 | no |\n| max_message_size | Maximum message size in bytes | number | 262144 | no |\n| delay_seconds | Delivery delay | number | 0 | no |\n| receive_wait_time_seconds | Long polling wait time | number | 